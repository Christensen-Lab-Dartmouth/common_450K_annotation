library(Biobase)
library(GEOquery)
gset <- getGEO("GSE51032", GSEMatrix =TRUE, getGPL=FALSE)
dir = paste('/Users/atitus/Box Sync/Sync_Folder/01_Graduate_school/',
'02_Research_collaborations/ActiveStep_Lurie-MacKenzie', sep = '')
setwd(dir)
knitr::opts_knit$set(root.dir = dir)
filename = 'activestep_data.csv'
data = read.csv(paste('data/', filename, sep = ''))
table(data$TreatmentCode)
sum(is.na(data$TreatmentCode))
table(data$times_fallen_3months)
sum(is.na(data$times_fallen_3months)) # 3610 NAs
colnames(data)
table(data$fallen_3months)
table(data$fallen_3months, data$times_fallen_3months)
nrow(data[!is.na(data$times_fallen_3_months), ]) # 931 people with reported falls
data$times_fallen_3_months = ifelse(is.na(data$times_fallen_3_months), 0,
data$times_fallen_3_months)
table(data$fallen_past_3months, data$times_fallen_3_months)
table(data$fallen_3month)
table(data$times_fallen_3months)
sum(table(data$times_fallen_3months))
table(data$fallen_3month)
table(data$fallen_past_3months)
sum(table(data$data$times_fallen_3_months))
sum(table(data$times_fallen_3_months))
table(data$fallen_past_3months)
sum(table(data$times_fallen_3_months))
table(data$fallen_past_3months)
table(data$fallen_past_3months)
table(data$times_fallen_3_months)
table(data$times_fallen_3_months)
table(data$fallen_past_3months)
table(data$times_fallen_3_months)
table(data$times_fallen_3months)
dir = paste('/Users/atitus/Box Sync/Sync_Folder/01_Graduate_school/',
'02_Research_collaborations/ActiveStep_Lurie-MacKenzie', sep = '')
setwd(dir)
knitr::opts_knit$set(root.dir = dir)
filename = 'activestep_data.csv'
data = read.csv(paste('data/', filename, sep = ''))
table(data$TreatmentCode)
sum(is.na(data$TreatmentCode))
table(data$times_fallen_3months)
nrow(data[!is.na(data$times_fallen_3months), ]) # 266 people with reported falls
sum(is.na(data$times_fallen_3months)) # 3610 NAs
data$times_fallen_3months = ifelse(is.na(data$times_fallen_3months), 0,
data$times_fallen_3months)
table(data$fallen_3month)
table(data$times_fallen_3months)
nrow(data[!is.na(data$times_fallen_3_months), ]) # 931 people with reported falls
sum(is.na(data$times_fallen_3_months)) # 2945 NAs
data$times_fallen_3_months = ifelse(is.na(data$times_fallen_3_months), 0,
data$times_fallen_3_months)
table(data$fallen_past_3months)
table(data$times_fallen_3_months)
data <- within(data, TreatmentCode <- relevel(TreatmentCode, ref = 'STANDARD'))
model = lm(times_fallen_3_months ~ 1 + TreatmentCode + times_fallen_3months,
data = data)
summary(model)
nrow(data) #
data = data[data$times_fallen_3months <= 90, ]
nrow(data)
data = data[data$times_fallen_3_months <= 90, ] # remove 2
nrow(data)
data <- within(data, TreatmentCode <- relevel(TreatmentCode, ref = 'STANDARD'))
data$log_post_3month_falls = log(data$times_fallen_3months)
model = glm(times_fallen_3_months ~ 1 + TreatmentCode + times_fallen_3months,
family = poisson(link = log),
data = data)
model = glm(times_fallen_3_months ~ 1 + TreatmentCode + times_fallen_3months,
family = poisson(link = log),
data = data)
summary(model)
model = glm(times_fallen_3_months ~ 1 + TreatmentCode + log_post_3month_falls,
family = poisson(link = log),
data = data)
data$log_post_3month_falls
model = glm(times_fallen_3_months ~ 1 + TreatmentCode + times_fallen_3months,
family = poisson(link = log),
data = data)
summary(model)
require(sandwich)
cov.m1 <- vcovHC(model, type="HC0")
std.err <- sqrt(diag(cov.m1))
library(sandwich)
install.packages('sandwich')
library(sandwich)
cov.m1 <- vcovHC(model, type="HC0")
std.err <- sqrt(diag(cov.m1))
r.est <- cbind(Estimate= coef(model), "Robust SE" = std.err,
"Pr(>|z|)" = 2 * pnorm(abs(coef(model)/std.err), lower.tail=FALSE),
LL = coef(model) - 1.96 * std.err,
UL = coef(model) + 1.96 * std.err)
r.est
source("https://bioconductor.org/biocLite.R")
biocLite("Gviz")
library(Gviz)
install.packages('tibble')
library(Gviz)
install.packages('backports')
library(Gviz)
library(rtracklayer)
myFavoriteGene <- c("AGRN")
gen <- "hg19" #genome build
chr <- "chr1"
mySession <- browserSession('UCSC')
genome(mySession) <- gen
query <- ucscTableQuery(mySession,track='refGene')
tableName(query) <- "refGene"
refseq <- getTable(query)
## Subset your tracks and tables as much as you can to save time and minimize RStudio crashing:
refseq <- refseq[refseq$name2 == myFavoriteGene, ] #further subset
TSS <- min(refseq$txStart)
from <- TSS - 5000 #add 5kb extra
to <- max(refseq$cdsEnd) + 5000 #add 5kb extra
paste0(chr,":",from,"-",to) #can be searched on UCSC Genome Broswer
ideoTrack <- IdeogramTrack(genome=gen, chromosome=chr, from=from, to=to)
axTrack <- GenomeAxisTrack(genome=gen, chromosome=chr, from=from, to=to)
GeneTrack <- UcscTrack(
genome=gen, chromosome=chr,
track="refGene", trackType = "GeneRegionTrack",
from=from, to=to,
rstarts="exonStarts", rends="exonEnds", strand="strand",
gene="name", symbol="name2", transcript="name",
transcriptAnnotation="symbol", #labels gene names
stacking="dense", #options: "full", "pack", & "dense" as in UCSC Genome Browser
fill="salmon", col="salmon", name="RefSeq Genes" #update based on your choice
)
GeneTrack <- UcscTrack(
genome=gen, chromosome=chr,
track="refGene", trackType = "GeneRegionTrack",
from=from, to=to,
rstarts="exonStarts", rends="exonEnds", strand="strand",
gene="name", symbol="name2", transcript="name",
transcriptAnnotation="symbol", #labels gene names
stacking="dense", #options: "full", "pack", & "dense" as in UCSC Genome Browser
fill="salmon", col="salmon", name="RefSeq Genes" #update based on your choice
)
cpgIslands <- UcscTrack(
genome=gen, chromosome=chr, track="cpgIslandExt",
from=from, to=to,
trackType="AnnotationTrack",
start="chromStart",
end="chromEnd",
id="name", shape="box",
stacking="dense",
fill="#006400", col="#006400", name="CpG islands"
)
plotTracks(
c(ideoTrack, axTrack, GeneTrack, cpgIslands ),#, dTrack_RRBS, dTrack_H3K27ac),
genome=gen, chromosome=chr,
reverseStrand=FALSE,
from=from, to=to,
background.title = "black"
)
source("https://bioconductor.org/biocLite.R")
biocLite("Gviz")
library(Gviz)
library(rtracklayer)
myFavoriteGene <- c("AGRN", 'PERM1', 'FAM41C', 'LOC100130417', 'HES4', 'ISG15', 'KLHL17', 'NOC2L', 'PLEKHN1', 'SAMD11', 'WASH7P')
length(myFavoriteGene)
gen <- "hg19" #genome build
chr <- "chr1"
mySession <- browserSession('UCSC')
genome(mySession) <- gen
query <- ucscTableQuery(mySession,track='refGene')
tableName(query) <- "refGene"
refseq <- getTable(query)
## Subset your tracks and tables as much as you can to save time and minimize RStudio crashing:
refseq <- refseq[refseq$name2 == myFavoriteGene, ] #further subset
TSS <- min(refseq$txStart)
from <- TSS - 5000 #add 5kb extra
to <- max(refseq$cdsEnd) + 5000 #add 5kb extra
paste0(chr,":",from,"-",to) #can be searched on UCSC Genome Broswer
ideoTrack <- IdeogramTrack(genome=gen, chromosome=chr, from=from, to=to)
axTrack <- GenomeAxisTrack(genome=gen, chromosome=chr, from=from, to=to)
GeneTrack <- UcscTrack(
genome=gen, chromosome=chr,
track="refGene", trackType = "GeneRegionTrack",
from=from, to=to,
rstarts="exonStarts", rends="exonEnds", strand="strand",
gene="name", symbol="name2", transcript="name",
transcriptAnnotation="symbol", #labels gene names
stacking="full", #options: "full", "pack", & "dense" as in UCSC Genome Browser
fill="salmon", col="salmon", name="RefSeq Genes" #update based on your choice
)
# dTrack_RRBS <- DataTrack(
#      CD3_rrbs,
#      type="histogram",
#      genome=gen, chromosome=chr,
#      from=from, to=to,
#      fill="blue", col="blue",
#      name="RRBS"
# )
# dTrack_RRBS
#
# dTrack_H3K27ac <- DataTrack(
#      CD3_broadPeak,
#      type="histogram",
#      genome=gen, chromosome=chr,
#      from=from, to=to,
#      fill="orange", col="orange",
#      name="H3K27ac"
# )
# dTrack_H3K27ac
cpgIslands <- UcscTrack(
genome=gen, chromosome=chr, track="cpgIslandExt",
from=from, to=to,
trackType="AnnotationTrack",
start="chromStart",
end="chromEnd",
id="name", shape="box",
stacking="dense",
fill="#006400", col="#006400", name="CpG islands"
)
plotTracks(
c(ideoTrack, axTrack, GeneTrack, cpgIslands ),#, dTrack_RRBS, dTrack_H3K27ac),
genome=gen, chromosome=chr,
reverseStrand=FALSE,
from=from, to=to,
background.title = "black"
)
max(refseq$cdsEnd)
from <- 9361 #TSS - 5000 #add 5kb extra
to <- 1056119#max(refseq$cdsEnd) + 5000 #add 5kb extra
paste0(chr,":",from,"-",to) #can be searched on UCSC Genome Broswer
ideoTrack <- IdeogramTrack(genome=gen, chromosome=chr, from=from, to=to)
axTrack <- GenomeAxisTrack(genome=gen, chromosome=chr, from=from, to=to)
GeneTrack <- UcscTrack(
genome=gen, chromosome=chr,
track="refGene", trackType = "GeneRegionTrack",
from=from, to=to,
rstarts="exonStarts", rends="exonEnds", strand="strand",
gene="name", symbol="name2", transcript="name",
transcriptAnnotation="symbol", #labels gene names
stacking="full", #options: "full", "pack", & "dense" as in UCSC Genome Browser
fill="salmon", col="salmon", name="RefSeq Genes" #update based on your choice
)
# dTrack_RRBS <- DataTrack(
#      CD3_rrbs,
#      type="histogram",
#      genome=gen, chromosome=chr,
#      from=from, to=to,
#      fill="blue", col="blue",
#      name="RRBS"
# )
# dTrack_RRBS
#
# dTrack_H3K27ac <- DataTrack(
#      CD3_broadPeak,
#      type="histogram",
#      genome=gen, chromosome=chr,
#      from=from, to=to,
#      fill="orange", col="orange",
#      name="H3K27ac"
# )
# dTrack_H3K27ac
# cpgIslands <- UcscTrack(
#      genome=gen, chromosome=chr, track="cpgIslandExt",
#      from=from, to=to,
#      trackType="AnnotationTrack",
#      start="chromStart",
#      end="chromEnd",
#      id="name", shape="box",
#      stacking="dense",
#      fill="#006400", col="#006400", name="CpG islands"
# )
plotTracks(
c(ideoTrack, axTrack, GeneTrack, cpgIslands ),#, dTrack_RRBS, dTrack_H3K27ac),
genome=gen, chromosome=chr,
reverseStrand=FALSE,
from=from, to=to,
background.title = "black"
)
from <- 0 #TSS - 5000 #add 5kb extra
to <- 1056119 #max(refseq$cdsEnd) + 5000 #add 5kb extra
paste0(chr,":",from,"-",to) #can be searched on UCSC Genome Broswer
ideoTrack <- IdeogramTrack(genome=gen, chromosome=chr, from=from, to=to)
axTrack <- GenomeAxisTrack(genome=gen, chromosome=chr, from=from, to=to)
GeneTrack <- UcscTrack(
genome=gen, chromosome=chr,
track="refGene", trackType = "GeneRegionTrack",
from=from, to=to,
rstarts="exonStarts", rends="exonEnds", strand="strand",
gene="name", symbol="name2", transcript="name",
transcriptAnnotation="symbol", #labels gene names
stacking="full", #options: "full", "pack", & "dense" as in UCSC Genome Browser
fill="salmon", col="salmon", name="RefSeq Genes" #update based on your choice
)
# dTrack_RRBS <- DataTrack(
#      CD3_rrbs,
#      type="histogram",
#      genome=gen, chromosome=chr,
#      from=from, to=to,
#      fill="blue", col="blue",
#      name="RRBS"
# )
# dTrack_RRBS
#
# dTrack_H3K27ac <- DataTrack(
#      CD3_broadPeak,
#      type="histogram",
#      genome=gen, chromosome=chr,
#      from=from, to=to,
#      fill="orange", col="orange",
#      name="H3K27ac"
# )
# dTrack_H3K27ac
# cpgIslands <- UcscTrack(
#      genome=gen, chromosome=chr, track="cpgIslandExt",
#      from=from, to=to,
#      trackType="AnnotationTrack",
#      start="chromStart",
#      end="chromEnd",
#      id="name", shape="box",
#      stacking="dense",
#      fill="#006400", col="#006400", name="CpG islands"
# )
plotTracks(
c(ideoTrack, axTrack, GeneTrack, cpgIslands ),#, dTrack_RRBS, dTrack_H3K27ac),
genome=gen, chromosome=chr,
reverseStrand=FALSE,
from=from, to=to,
background.title = "black"
)
from <- 0 #TSS - 5000 #add 5kb extra
to <- 1056119 #max(refseq$cdsEnd) + 5000 #add 5kb extra
paste0(chr,":",from,"-",to) #can be searched on UCSC Genome Broswer
ideoTrack <- IdeogramTrack(genome=gen, chromosome=chr, from=from, to=to)
axTrack <- GenomeAxisTrack(genome=gen, chromosome=chr, from=from, to=to)
GeneTrack <- UcscTrack(
genome=gen, chromosome=chr,
track="refGene", trackType = "GeneRegionTrack",
from=from, to=to,
rstarts="exonStarts", rends="exonEnds", strand="strand",
gene="name", symbol="name2", transcript="name",
transcriptAnnotation="symbol", #labels gene names
stacking="pack", #options: "full", "pack", & "dense" as in UCSC Genome Browser
fill="salmon", col="salmon", name="RefSeq Genes" #update based on your choice
)
# dTrack_RRBS <- DataTrack(
#      CD3_rrbs,
#      type="histogram",
#      genome=gen, chromosome=chr,
#      from=from, to=to,
#      fill="blue", col="blue",
#      name="RRBS"
# )
# dTrack_RRBS
#
# dTrack_H3K27ac <- DataTrack(
#      CD3_broadPeak,
#      type="histogram",
#      genome=gen, chromosome=chr,
#      from=from, to=to,
#      fill="orange", col="orange",
#      name="H3K27ac"
# )
# dTrack_H3K27ac
# cpgIslands <- UcscTrack(
#      genome=gen, chromosome=chr, track="cpgIslandExt",
#      from=from, to=to,
#      trackType="AnnotationTrack",
#      start="chromStart",
#      end="chromEnd",
#      id="name", shape="box",
#      stacking="dense",
#      fill="#006400", col="#006400", name="CpG islands"
# )
plotTracks(
c(ideoTrack, axTrack, GeneTrack),#, cpgIslands , dTrack_RRBS, dTrack_H3K27ac),
genome=gen, chromosome=chr,
reverseStrand=FALSE,
from=from, to=to,
background.title = "black"
)
source("https://bioconductor.org/biocLite.R")
install.packages(c("backports", "BH", "cgdsr", "checkmate", "clue", "corrplot", "curl", "data.table", "DBI", "devtools", "dplyr", "evaluate", "fastICA", "fields", "Formula", "gdata", "git2r", "gridExtra", "hms", "htmlTable", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "lambda.r", "lazyeval", "lme4", "maps", "mclust", "mice", "nleqslv", "nor1mix", "openssl", "R.utils", "R6", "RcppEigen", "registry", "reshape", "rlang", "rmarkdown", "RSQLite", "rstudioapi", "sandwich", "scales", "shiny", "spam", "stringi", "survey", "tibble", "VennDiagram", "withr", "XML", "yaml"))
install.packages(c("boot", "foreign", "Matrix", "mgcv"), lib="C:/Program Files/R/R-3.3.2/library")
biocLite("TCGAbiolinks")
query <- GDCquery(project = "TCGA-COAD",
data.category = "Clinical",
data.type = "Clinical Supplement",
legacy = TRUE,
barcode = c("TCGA-RU-A8FL","TCGA-AA-3972"))
library(TCGAbiolinks)
devtools::install_github("BioinformaticsFMRP/TCGAbiolinks")
library(TCGAbiolinks)
query <- GDCquery(project = "TCGA-COAD",
data.category = "Clinical",
data.type = "Clinical Supplement",
legacy = TRUE,
barcode = c("TCGA-RU-A8FL","TCGA-AA-3972"))
query %>% getResults %>% datatable(options = list(scrollX = TRUE, keys = TRUE))
GDCdownload(query)
getwd()
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
View(clinical)
query <- GDCquery(data.category = "Clinical",
data.type = "Clinical Supplement",
legacy = TRUE)
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
query <- GDCquery(project = "TCGA",
data.category = "Clinical",
data.type = "Clinical Supplement",
legacy = TRUE)
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Clinical",
data.type = "Clinical Supplement",
legacy = TRUE)
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
GDCdownload(query)
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
View(clinical)
?write.csv
write.csv(clinical, file = 'TCGA_BRCA_clinical_legacy.csv')
TCGAbiolinks:::getGDCprojects()$project_id
projects = TCGAbiolinks:::getGDCprojects()$project_id
query = GDCquery(project = projects[1],
data.category = "Clinical",
data.type = "Clinical Supplement",
legacy = TRUE)
proujects
projects
projects = TCGAbiolinks:::getGDCprojects()$project_id
for(project in projects){
# Build our query
query = GDCquery(project = project,
data.category = "Clinical",
data.type = "Clinical Supplement",
legacy = TRUE)
# Download the TCGA clinical data
GDCdownload(query)
# Load the TCGA clinical data
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
# Write the TCGA clinical data
write.csv(clinical, file = paste(project, '_clinical_legacy.csv', sep = ""))
}
TCGAbiolinks:::getGDCprojects()$project_id
protects = projects[grep('TCGA')]
protects = grep('TCGA', projects)
protects = projects(grep('TCGA', projects))
protects = projects[grep('TCGA', projects)]
projects = projects[grep('TCGA', projects)]
rm(protects)
projects
for(project in projects){
# Build our query
query = GDCquery(project = project,
data.category = "Clinical",
data.type = "Clinical Supplement",
legacy = TRUE)
# Download the TCGA clinical data
GDCdownload(query)
# Load the TCGA clinical data
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
# Write the TCGA clinical data
write.csv(clinical, file = paste(project, '_clinical_legacy.csv', sep = ""))
}
?wget
working.dir = getwd()
working.dir = 'C:/Users/atitus/github/shared_450K_annotation'
setwd(working.dir)
file.name = 'Illumina-Human-Methylation-450kilmn12-hg19.annotated.rds'
readRDS(file.name)
anno450k =readRDS(file.name)
anno450k = data.frame(readRDS(file.name))
View(anno450k)
hmec.url = 'http://asntech.org/dbsuper/data/bed/hg19/HMEC.bed'
mcf7.url = 'http://asntech.org/dbsuper/data/bed/hg19/MCF-7.bed'
download.file(hmec.url)
download.file(hmec.url, destfile = 'HMEC_dbSuper.bed')
download.file(mcf7.url, destfile = 'MCF7_dbSuper.bed')
hmec.COREfile = 'data/HMEC_CORE.csv'
mcf7.COREfile = 'data/MCF7_CORE.csv'
